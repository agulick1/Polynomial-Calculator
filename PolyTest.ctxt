#BlueJ class context
comment0.target=PolyTest
comment0.text=\n\ A\ class\ with\ unit\ tests\ for\ the\ Poly\ polynomial\ class.\n\ \n\ We\ recommend\ you\ tackle\ them\ (i.e.\ try\ to\ make\ them\ pass)\ in\ the\ \n\ order\ they\ appear\ in\ this\ file.\n\n\ @author\ \ Anna\ Gommerstadt\ &\ Rui\ Meireles\n\ @version\ 1.0\n
comment1.params=
comment1.target=void\ additionalTests()
comment1.text=\n\ 5\ additional\ tests\ \n
comment2.params=
comment2.target=void\ test1ConsAndEquals()
comment2.text=\n\ Tests\ creation\ and\ equality\ testing\ of\ single-term\ polynomials.\n
comment3.params=
comment3.target=void\ test2AddAndSub()
comment3.text=\n\ Tests\ polynomial\ addition\ and\ subtraction.\n\ Assumes\ the\ following\ methods\ are\ correct\:\ constructor,\ equals().\n
comment4.params=
comment4.target=void\ test3Mul()
comment4.text=\n\ Tests\ polynomial\ multiplication.\n\ Assumes\ the\ following\ methods\ are\ correct\:\ constructor,\ equals(),\ add().\ \n
comment5.params=
comment5.target=void\ test5MulDiv()
comment5.text=\n\ Tests\ polynomial\ division.\n\ Assumes\ the\ following\ methods\ are\ correct\:\ constructor,\ equals(),\ add(),\ multiply().\n
comment6.params=polyStr\ p
comment6.target=void\ testToStringHelper(java.lang.String,\ Poly)
comment6.text=\n\ A\ helper\ method\ to\ check\ wheter\ a\ polynomial's\ toString()\ returns\ a\ string\n\ in\ the\ correct\ format.\n\ \n\ @param\ polyStr\ the\ string\ that\ should\ be\ returned\ by\ polynomial\ toString().\n\ @param\ p\ the\ polynomial\ to\ be\ tested.\n\ @return\ an\ error\ message.\n
comment7.params=
comment7.target=void\ test5ToString()
comment7.text=\n\ Tests\ polynomial\ toString().\n\ Assumes\ the\ following\ methods\ are\ correct\:\ constructor,\ add().\n
numComments=8
